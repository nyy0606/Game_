스택(Stack) : 불안정하고 임시적으로 사용하는 메모리, 함수를 사용하기 위한 메모장
ex) 함수(){
	int a; // <- 함수를  호출하기 위해 잠깐 사용하고 종료되면 더 이상 사용안하는 임시값
}

함수 안에 선언되는 변수들은 stack

복사되는 타입은 메모리 안에 실제 본체(실제 메모리)가 들어있음

참조형은 메모리에 본체가 아니라 주소가 들어감(64비트컴에선 64, 32에선 32/ 최신형 컴에선 크기는 8)

참조타입의 본체는 Heap에 있음
Heap : 동적으로 할당하는 것, 



클래스 필드의 객체들은 클래스 밖 인스턴스 값에 종속되어 여러개의 값이 존재할 수 있다
하지만 static을 사용하면 인스턴스가 아닌 클래스에 종속되어 단 하나만 존재한다


static을 사용한 함수는 함수 내에서 같은 클래스의 변수라도 static을 선언하지 않은 변수는 사용할 수 없다.
static을 선언하지 않은 변수는 객체마다 값이 다 다를 수 있기 때문
static을 선언한 함수는 static을 선언한 변수만 사용가능
하지만 함수 내부에 객체를 사용한 인스턴스를 만들었다면 사용가능하다(ex. new함수를 이용한 객체 생성)

자식은 부모의 필드 뿐 아니라 메서드도 상속받는다.
공통적인 필드와 함수를 부모클래스에 넣고 특별한 경우만 자식으로 빼는게 편하다
ex) 생명체 클래스(부모) - Move, Attack, Eat
사람 클래스(자식) - 말하기, 아르헨티나 백브레이커
개 클래스(자식) - 짖기, 광견병 옮기기

